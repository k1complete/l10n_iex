#. TRANSLATORS: def IEx.Introspection.t(module)
#: lib/iex/introspection.ex:190 
msgid ""
"Print types in module.\n"
msgstr ""
#. TRANSLATORS: def IEx.Introspection.t(module, type, arity)
#: lib/iex/introspection.ex:224 
msgid ""
"Print type in module with given arity.\n"
msgstr ""
#. TRANSLATORS: def IEx.Introspection.t(module, type)
#: lib/iex/introspection.ex:203 
msgid ""
"Print the given type in module with any arity.\n"
msgstr ""
#. TRANSLATORS: def IEx.Introspection.s(module)
#: lib/iex/introspection.ex:245 
msgid ""
"Print specs for given module.\n"
msgstr ""
#. TRANSLATORS: def IEx.Introspection.s(module, function)
#: lib/iex/introspection.ex:264 
msgid ""
"Print specs for given module and function.\n"
msgstr ""
#. TRANSLATORS: def IEx.Introspection.s(module, function, arity)
#: lib/iex/introspection.ex:285 
msgid ""
"Print spec in given module, with arity.\n"
msgstr ""
#. TRANSLATORS: def IEx.Introspection.h(modules, function, arity)
#: lib/iex/introspection.ex:88 
msgid ""
"Documentation for the given function and arity in the list of modules.\n"
msgstr ""
#. TRANSLATORS: def IEx.Introspection.h(module)
#: lib/iex/introspection.ex:12 
msgid ""
"Documentation for modules.\n"
"It has a fallback clauses\n"
msgstr ""
#. TRANSLATORS: def IEx.Introspection.h(modules, function)
#: lib/iex/introspection.ex:47 
msgid ""
"Docs for the given function, with any arity, in any of the modules.\n"
msgstr ""
