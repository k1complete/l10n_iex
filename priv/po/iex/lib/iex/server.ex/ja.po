msgid ""
msgstr ""
"Project-Id-Version: l 10n_iex\n"
"PO-Revision-Date: 2015-05-19 21:48+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: def IEx.Server.start(opts, arg2)
#: lib/iex/server.ex:81
msgid ""
"Starts IEx by executing a given callback and spawning\n"
"the server only after the callback is done.\n"
"\n"
"The server responsibilities include:\n"
"\n"
"  * reading input\n"
"  * sending messages to the evaluator\n"
"  * handling takeover process of the evaluator\n"
"\n"
"If there is any takeover during the callback execution\n"
"we spawn a new server for it without waiting for its\n"
"conclusion.\n"
msgstr ""
"IExの開始時に、与えられたコールバックの実行と、コールバックが実行終了後\n"
"にのみサーバの生成をします。\n"
"\n"
"サーバは以下に責任をもちます:\n"
"\n"
"  * 入力の読み込み\n"
"  * 評価器へのメッセージ送信\n"
"  * 評価器のプロセスのテイクオーバーのハンドリング\n"
"\n"
"もしコールバック実行中にテイクオーバーがあったら、その結果を待つことな\n"
"く新しいサーバを生成します。\n"

#. TRANSLATORS: def IEx.Server.take_over(identifier, opts, timeout \\ 1000, server \\ whereis())
#: lib/iex/server.ex:40
msgid ""
"Requests to take over the given shell from the\n"
"current process.\n"
msgstr "現在のプロセスから与えられたシェルへのテイクオーバーを要求します。\n"

#. TRANSLATORS: def IEx.Server.whereis()
#: lib/iex/server.ex:14
msgid "Finds where the current IEx server is located.\n"
msgstr "現在のIExサーバが置かれた場所を見付けます。\n"
